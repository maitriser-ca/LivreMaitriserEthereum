[appendix]
[[ethereum_standards]]
== Normes Ethereum

[[eips]]
=== Propositions d&#39;amélioration d&#39;Ethereum (EIPs)

(((&quot;EIP (Propositions d&#39;amélioration d&#39;Ethereum)&quot;)))(((&quot;Ethereum (généralement)&quot;,&quot;EIP&quot;)))(((&quot;Ethereum (généralement)&quot;,&quot;normes&quot;)))Le référentiel des propositions d&#39;amélioration d&#39;Ethereum est situé sur https://github.com/ethereum/EIPs/[]. (((&quot;EIPs (Ethereum Improvement Proposals)&quot;,&quot;workflow&quot;)))Le flux de travail est illustré dans &lt;<eip_workflow>&gt;.

Depuis https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1.md[EIP-1] :

____
EIP signifie Ethereum Improvement Proposal (Proposition d&#39;amélioration d&#39;Ethereum). Un EIP est un document de conception fournissant des informations à la communauté Ethereum ou décrivant une nouvelle fonctionnalité pour Ethereum ou ses processus ou son environnement. L&#39;EIP doit fournir une spécification technique concise de la fonctionnalité et une justification de la fonctionnalité. L&#39;auteur de l&#39;EIP est responsable de la recherche d&#39;un consensus au sein de la communauté et de la documentation des opinions dissidentes.
____

[[eip_workflow]]
.Flux de travail des propositions d&#39;amélioration Ethereum
image::images/eip_workflow.png[&quot;Flux de travail des propositions d&#39;amélioration d&#39;Ethereum&quot;]

[[eip_table]]
=== Tableau des EIP et ERC les plus importants

.EIP et ERC importants
[options="header"]
|===
| N° EIP/ERC | Titre/Description | Auteur | Couche | Statut | Créé par
| http://bit.ly/2OVq6qa[EIP-1] | Objectif et lignes directrices de l&#39;EIP | Martin Becze, Hudson Jameson | Méta | Finale |
| http://bit.ly/2yJtTNa[EIP-2] | Changements à la fourchette dure de Homestead | Vitalik Buterin | Noyau | Finale |

| http://bit.ly/2Jrx93V[EIP-5] | Consommation de gaz pour `RETURN` et `CALL*` | Christian Reitwiessner | Noyau | Brouillon |
| http://bit.ly/2OYbc2t[EIP-6] | Renommer +SUICIDE+ Opcode | Hudson Jameson | Interface | Finale |
| http://bit.ly/2JxdBeN[EIP-7] | `DELEGATECALL` | Vitalik Buterin | Noyau | Finale |
| http://bit.ly/2Q6Oly6[EIP-8] | Exigences de compatibilité ascendante devp2p pour Homestead | Félix Lange | Réseautage | Finale |
| http://bit.ly/2CUf7WG[EIP-20] | Norme de jeton ERC-20. Décrit les fonctions standard qu&#39;un contrat de jeton peut implémenter pour permettre aux DApp et aux portefeuilles de gérer les jetons sur plusieurs interfaces/DApp. Les méthodes incluent : `totalSupply`, +balanceOf(address)+, `transfer`, `transferFrom`, `approve`, `allowance`. Les événements incluent : `Transfer` (déclenché lorsque les jetons sont transférés), pass:[<span class="keep-together"><code>Approval</code></span>] (déclenché lorsque `approve` est appelé). | Fabian Vogelsteller, Vitalik Buterin | ERC | Finale | Frontière
| http://bit.ly/2Q6R4YB[EIP-55] | Codage d&#39;adresse de somme de contrôle à casse mixte | Vitalik Buterin | ERC | Finale |
| http://bit.ly/2OgE5la[EIP-86] | Abstraction de l&#39;origine et de la signature de la transaction. prépare le terrain pour &quot;abstraire&quot; la sécurité des comptes et permettre aux utilisateurs de créer des &quot;contrats de compte&quot;, en évoluant vers un modèle où, à long terme, tous les comptes sont des contrats qui peuvent payer pour le gaz, et les utilisateurs sont libres de définir leurs propres modèles de sécurité qui effectuer toute vérification de signature et vérifications nonce souhaitées (au lieu d&#39;utiliser le mécanisme dans le protocole où ECDSA et le schéma nonce par défaut sont le seul moyen &quot;standard&quot; de sécuriser un compte, qui est actuellement codé en dur dans le traitement des transactions). | Vitalik Buterin | Noyau | Différé (à remplacer) | Constantinople
| http://bit.ly/2QedSFC[EIP-96] | Blockhash et changements de racine d&#39;état. Stocke les hachages de bloc dans l&#39;état pour réduire la complexité du protocole et le besoin d&#39;implémentations client complexes pour traiter l&#39;opcode `BLOCKHASH`. Étend la portée de la vérification des blocs de hachage, avec pour effet secondaire de créer des liens directs entre les blocs avec des numéros de bloc très éloignés pour faciliter une synchronisation initiale beaucoup plus efficace du client léger. | Vitalik Buterin | Noyau | Différé | Constantinople
| http://bit.ly/2AC05DM[EIP-100] | Modifie l&#39;ajustement de la difficulté pour cibler le temps de blocage moyen et inclure les oncles. | Vitalik Buterin | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2Jr1zDv[EIP-101] | Monnaie de sérénité et abstraction cryptographique. Rend abstrait l'ether d&#39;un niveau avec l&#39;avantage de permettre à l&#39;ether et aux sous-jetons d&#39;être traités de manière similaire par des contrats, réduisant le niveau d&#39;indirection requis pour les comptes de politique personnalisée tels que les multisigs et purifiant le protocole Ethereum sous-jacent en réduisant la complexité minimale de mise en œuvre du consensus. | Vitalik Buterin | Actif | Fonction Sérénité | Sérénité Casper
| http://bit.ly/2Q5sdEv[EIP-105] | Partage binaire plus sémantique d&#39;appel de contrat. &quot;Échafaudage de partitionnement&quot; EIP pour permettre aux transactions Ethereum d&#39;être parallélisées à l&#39;aide d&#39;un mécanisme de partitionnement d&#39;arbre binaire, et pour préparer le terrain pour un schéma de partitionnement ultérieur. Recherche en cours; voir https://github.com/ethereum/sharding[]. | Vitalik Buterin | Actif | Fonction Sérénité | Sérénité Casper
| http://bit.ly/2yG2Dzi[EIP-137] | Service de nom de domaine Ethereum - Spécification | Nick Johnson | ERC | Finale |
| http://bit.ly/2yJtWZm[EIP-140] | Nouvel Opcode : +REVERT+. Ajoute l&#39;instruction d&#39;opcode `REVERT`, qui arrête l&#39;exécution et annule les changements d&#39;état d&#39;exécution EVM sans consommer tout le gaz fourni (au lieu de cela, le contrat ne doit payer que pour la mémoire) ou perdre les journaux, et renvoie à l&#39;appelant un pointeur vers l&#39;emplacement de la mémoire avec le code ou le message d&#39;erreur. | Alex Beregszaszi, Nikolai Mushegian | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2CQMXfe[EIP-141] | Instruction EVM invalide désignée | Alex Beregszaszi | Noyau | Finale |
| http://bit.ly/2qhKz9Y[EIP-145] | Instructions de décalage au niveau du bit dans EVM | Alex Beregszaszi, Pawel Bylica | Noyau | Différé |
| http://bit.ly/2qhxflQ[EIP-150] | Changements de coût du gaz pour les opérations lourdes d&#39;E/S | Vitalik Buterin | Noyau | Finale |
| http://bit.ly/2CQUgne[EIP-155] | Protection simple contre les attaques par relecture. Replay Attack permet à toute transaction utilisant un nœud ou un client Ethereum pré-EIP-155 d&#39;être signée afin qu&#39;elle soit valide et exécutée sur les chaînes Ethereum et Ethereum Classic. | Vitalik Buterin | Noyau | Finale | Propriété
| http://bit.ly/2JryBmT[EIP-158] | Dédouanement de l&#39;État | Vitalik Buterin | Noyau | Remplacé |
| http://bit.ly/2CR6VGY[EIP-160] | Augmentation du coût de l&#39;EXP | Vitalik Buterin | Noyau | Finale |
| http://bit.ly/2OfU96M[EIP-161] | Effacement de trie d&#39;état (alternative préservant l&#39;invariant) | Bois Gavin | Noyau | Finale |
| http://bit.ly/2JxdKil[EIP-162] | Initial ENS Hash Registrar | Maurelian, Nick Johnson, Alex Van de Sande | ERC | Finale |

| http://bit.ly/2OgsOkO[EIP-165] | Détection d&#39;interface standard ERC-165 | Christian Reitwiessner et al. | Interface | Brouillon |
| http://bit.ly/2OgCWu1[EIP-170] | Limite de taille du code de contrat | Vitalik Buterin | Noyau | Finale |
| http://bit.ly/2ERNv7g[EIP-181] | Prise en charge de l&#39;ENS pour la résolution inverse des adresses Ethereum | Nick Johnson | ERC | Finale |
| http://bit.ly/2P0wPz5[EIP-190] | Norme d&#39;emballage du contrat intelligent Ethereum | Piper Merriam et al. | ERC | Finale |
| http://bit.ly/2SwNQiz[EIP-196] | Contrats précompilés pour l&#39;addition et la multiplication scalaire sur la courbe elliptique +alt_bn128+. Requis pour effectuer la vérification zkSNARK dans la limite de gaz du bloc.
| Christian Reitwiessner | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2ETDC9a[EIP-197] | Contrats précompilés pour un contrôle d&#39;appariement optimal sur la courbe elliptique +alt_bn128+. Combiné avec EIP-196.
| Vitalik Buterin, Christian Reitwiessner | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2DdTCRN[EIP-198] | Exponentiation modulaire des grands entiers. Précompilation permettant la vérification de signature RSA et d&#39;autres applications cryptographiques.
| Vitalik Buterin | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2qjYJr3[EIP-211] | Nouveaux opcodes : `RETURNDATASIZE` et `RETURNDATACOPY`. Ajoute la prise en charge du retour de valeurs de longueur variable à l&#39;intérieur de l&#39;EVM avec une simple charge de gaz et une modification minimale des opcodes d&#39;appel à l&#39;aide des nouveaux opcodes `RETURNDATASIZE` et `RETURNDATACOPY`. Poignées similaires aux `calldata` existantes, dans lesquelles après un appel, les données de retour sont conservées dans un tampon virtuel à partir duquel l&#39;appelant peut les copier (ou des parties de celui-ci) dans la mémoire, et lors du prochain appel, le tampon est écrasé.
| Christian Reitwiessner | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2OgV0Eb[EIP-214] | Nouvel opcode : `STATICCALL`. Autorise les appels sans changement d&#39;état à lui-même ou à d&#39;autres contrats tout en interdisant toute modification d&#39;état pendant l&#39;appel (et ses sous-appels, le cas échéant) pour augmenter la sécurité des contrats intelligents et assurer aux développeurs que les bogues de réentrance ne peuvent pas résulter de l&#39;appel. Appelle l&#39;enfant avec l&#39;indicateur &#39;STATIC&#39; défini sur &#39;true&#39; pour l&#39;exécution de l&#39;enfant, provoquant la levée d&#39;une exception lors de toute tentative d&#39;opérations de changement d&#39;état à l&#39;intérieur d&#39;une instance d&#39;exécution où &#39;STATIC&#39; est &#39;true&#39;, et réinitialise l&#39;indicateur une fois l&#39;appel Retour. | Vitalik Buterin, Christian Reitwiessner | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2JssHlJ[EIP-225] | Rinkeby testnet utilise une preuve d&#39;autorité où les blocs ne sont extraits que par des signataires de confiance. | Péter Szilágyi | | | Propriété
| http://bit.ly/2yPBavd[EIP-234] | Ajouter `blockHash` aux options de filtre JSON-RPC | Michée Zoltu | Interface | Brouillon |

| http://bit.ly/2yKrBNM[EIP-615] | Sous-programmes et sauts statiques pour l&#39;EVM | Greg Colvin, Paweł Bylica, Christian Reitwiessner | Noyau | Brouillon |

| http://bit.ly/2AzGX99[EIP-616] | Opérations SIMD pour l&#39;EVM | Greg Colvin | Noyau | Brouillon |

| http://bit.ly/2qjYX1n[EIP-681] | Format d&#39;URL pour les demandes de transaction | Daniel A. Nagy | Interface | Brouillon |

| http://bit.ly/2OYgE5n[EIP-649] | Délai de bombe de difficulté Metropolis et réduction de récompense de bloc. Retardé l&#39;ère glaciaire (aka Difficulty Bomb) de 1 an et réduit la récompense de bloc de 5 à 3 éther. | Afri Schoedon, Vitalik Buterin | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2RoGCvH[EIP-658] | Intégration du code d&#39;état de la transaction dans les reçus. Récupère et intègre un champ d&#39;état indiquant l&#39;état de réussite ou d&#39;échec des reçus de transaction pour les appelants, car il n&#39;est plus possible de supposer que la transaction a échoué si et seulement si elle a consommé tout le gaz après l&#39;introduction de l&#39;opcode &quot;REVERT&quot; dans EIP-140.
| Nick Johnson | Noyau | Finale | Métropole Byzantinium
| http://bit.ly/2Ogwpzs[EIP-706] | Compression rapide DEVp2p | Péter Szilágyi | Réseautage | Finale |
| http://bit.ly/2AAkCIP[EIP-721] | Norme de jeton non fongible ERC-721. Une API standard qui permet aux contrats intelligents de fonctionner comme des jetons non fongibles (NFT) négociables uniques qui peuvent être suivis dans des portefeuilles standardisés et échangés sur des bourses en tant qu&#39;actifs de valeur, similaires à ERC20. CryptoKitties a été la première implémentation populairement adoptée d&#39;un NFT numérique dans l&#39;écosystème Ethereum. | William Entriken, Dieter Shirley, Jacob Evans, Nastassia Sachs | Norme | Brouillon |
| http://bit.ly/2qmuDmJ[EIP-758] | Abonnements et filtres pour les transactions terminées | Jack Peterson | Interface | Brouillon |
| http://bit.ly/2RnqlHy[EIP-801] | Norme canari ERC-801 | ligi | Interface | Brouillon |
| http://bit.ly/2DdTKkf[EIP-827] | Norme de jeton ERC827. Une extension de l&#39;interface standard ERC20 pour les jetons avec des méthodes qui permettent l&#39;exécution d&#39;appels à l&#39;intérieur de +transfer+ et d&#39;approbations. Cette norme fournit des fonctionnalités de base pour transférer des jetons, ainsi que permettre aux jetons d&#39;être approuvés afin qu&#39;ils puissent être dépensés par un autre tiers sur la chaîne. En outre, il permet au développeur d&#39;exécuter des appels sur les transferts et les approbations. | Augusto Lemble | ERC | Brouillon |
| http://bit.ly/2Jq2hAM[EIP-930] | Stockage éternel ERC930. Le contrat ES (Eternal Storage) appartient à une adresse disposant d&#39;autorisations d&#39;écriture. Le stockage est public, ce qui signifie que tout le monde a des autorisations de lecture. Il stocke les données dans des mappages, en utilisant un mappage par type de variable. L&#39;utilisation de ce contrat permet au développeur de migrer facilement le stockage vers un autre contrat si nécessaire. | Augusto Lemble | ERC | Brouillon |
|===